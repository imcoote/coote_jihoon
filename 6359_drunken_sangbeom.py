'''서강대학교 곤자가 기숙사의 지하에는 n개의 방이 일렬로 늘어선 감옥이 있다. 각 방에는 벌점을 많이 받은 학생이 구금되어있다.
그러던 어느 날, 감옥 간수인 상범이는 지루한 나머지 정신나간 게임을 하기로 결정했다.
게임의 첫 번째 라운드에서 상범이는 위스키를 한 잔 들이키고, 달려가며 감옥을 한 개씩 모두 연다.
그 다음 라운드에서는 2, 4, 6, ... 번 방을 다시 잠그고, 세 번째 라운드에서는 3, 6, 9, ... 번 방이 열려있으면 잠그고, 잠겨있다면 연다.
k번째 라운드에서는 번호가 k의 배수인 방이 열려 있으면 잠그고, 잠겨 있다면 연다.
이렇게 n번째 라운드까지 진행한 이후, 상범이는 위스키의 마지막 병을 마시고 쓰러져 잠든다.
구금되어있는 몇 명(어쩌면 0명)의 학생들은 자신의 방을 잠그지 않은 채 상범이가 쓰러져버렸단 것을 깨닫고 즉시 도망친다.
방의 개수가 주어졌을 때, 몇 명의 학생들이 도주할 수 있는지 알아보자.
입력 : 입력의 첫 번째 줄에는 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄에 한 개씩 방의 개수 n(5 ≤ n ≤ 100)이 주어진다.
출력 : 한 줄에 한 개씩 각 테스트 케이스의 답, 즉 몇 명이 탈출할 수 있는지를 출력한다.
'''

# 서강대학교는 진짜 무서운 학교인가보다...
# 뭔 기숙사에 감옥이있냐
# 심지어 문제 이해도 못하겠음

# GPT설명
# 핵심 아이디어
# 문이 열려 있는 경우
#
# 처음에는 모든 문이 열려 있음.
# 각 라운드에서 해당 배수의 방을 토글(열려 있으면 닫고, 닫혀 있으면 엶).
# 최종적으로 열려 있는 방의 개수를 구하는 것이 목표.
# 패턴 찾기
#
# 방 번호가 k의 배수일 때 토글되므로, 해당 방의 약수 개수에 따라 상태가 결정됨.
# 어떤 수가 약수를 홀수 개 가질 때 최종적으로 열려 있게 됨.
# 제곱수인 경우에만 약수의 개수가 홀수가 됨.
# → 예: 1(1×1), 4(2×2), 9(3×3), 16(4×4), ...
# 결론
#
# 열려 있는 방의 개수 = n 이하의 완전 제곱수 개수
# 즉, n 이하의 제곱수를 세면 된다.

# ㅇㅎ

case = int(input())
for _ in range(case):
    room = int(input())
    count = 0

    for i in range(1, int(room ** 0.5) + 1):
        count += 1

    print(count)

# 소요시간 : 15분
# 메모리 : 32412kb
# 시간 : 40ms

# 문제 이해랑 사칙연산 다시 찾아보는게 힘들었음
# 사칙연산부호 너무 헷갈림...